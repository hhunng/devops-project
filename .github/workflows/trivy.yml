name: Build and scan image
on:
  workflow_call:
    secrets:
      git_token:
        required: true

jobs:
  build:
    strategy:
      matrix:
        microservice: [billing-service, subscription-service, db-service, user-service]
    name: Build and scan image
    runs-on: ${{ vars.LINUX_RUNNER_VER }}
    env:
      DOCKER_TAG: ${{ format('{0}.{1}', github.run_number, github.run_id) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build an image from Dockerfile

        run: |
          docker build \
            --tag ${{ vars.REGISTRY }}:${{ github.sha }} \
            --tag ${{ vars.REGISTRY }}:${{ env.DOCKER_TAG }} \
            --tag ${{ vars.REGISTRY }}:latest \
            --label "org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}" \
            --label "org.opencontainers.image.description= ${{ matrix.microservice }} image for DEVOPS presentation" \
            --label "org.opencontainers.image.licenses=MIT" \
            ./${{ matrix.microservice }}/

      - name: Run Trivy vulnerability scanner for microservice
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: '${{ env.REGISTRY }}:${{ github.sha }}'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Login to GitHub Container Registry
        run: |
          echo "${{ secrets.git_token }}" | docker login ${{ vars.REGISTRY_DOMAIN }} -u "${{ github.actor }}" --password-stdin

      - name: Push the image
        run: |
          docker push ${{ vars.REGISTRY }}:${{ github.sha }}
          docker push ${{ vars.REGISTRY }}:${{ env.DOCKER_TAG }} 
          docker push ${{ vars.REGISTRY }}:latest
